{
"Description_of_labels": "Name of variable in Matlab; Matlab setup file name in which variable defined; matlab variable value (python variable value; Do we need to [FIX] this or is it [OK]",
"Nagents":   10000,
"Nagents_bootstrap":"NumOfPeopleBootstrap; EstimateRhoAndBetahat.m; 10000 (NONE; doesn't exist in Python); FIX? Maybe..",
"total_simuation_periods_including_T": 65,
"seed":      17891013848112,
"base0indexretire":  40,
"rho_first_guess":   4.0,
"beta_first_guess":  0.99,
"beta_lower_bound":  0.0001,
"beta_upper_bound":  15.0,
"rho_lower_bound":   0.0001,
"rho_upper_bound":   15.0,
"upper_lower_bounds_comment": "The upper and lower bounds are used in the 'errors_model_vs_data' function. Some of the derivative-free optimization routines can explore outside reasonable (economic) ranges for the beta and rho paramters, eg beta < 0. These bounds ensure that the 'errors' function will return an extrememly high value outside of the bounds.",
"R":   1.03,
"psi_N":   8,
"xi_N":   8,
"p_unemploy":   0,
"p_unemploy_retire":   0,
"value_unemploy":   0,
"value_unemploy_retire": 0,
"spline_k":   1,
"grid_type":   "exp_mult",
"exp_nest":   3,
"final_work_index":  25,
"final_work_age": 65,
"final_work_age_comment": "Currently not used.",
"constrained":   false,
"a_min":   0.00001,
"a_max":   4, 
"NEW_a_huge":  "AlphaHuge;setup_params.m; 5 (NONE); FIX",
"NEW_a_huge_comment": "Value of Alpha at which we connect to perf foresight function; believe used in Method Mod; FIX",
"a_size":   10,
"a_extra":  0.005,
"a_extra_comment": "Not in Matlab params setup; hardcoded. __?__ (0.03); Need to ask Chris why this is added to all vectors. FIX",
"bootstrap_sample_size":  30,
"initial_wealth_income_ratio_seed": 123456,
"initial_wealth_income_ratio_seed_comment": "This seed is used to draw the initial value of a0 ~ W/P ration used in the simulation. If we didn't include a seed here results would not be replicable.",
"initial_wealth_income_ratio_vals": [0.17, 0.5, 0.83], 
"NEW_initial_wealth_income_ratio_vals_comment": "Note that we should likely have other possible string-based 'flags' here which indicate to the code to use bootstrapping or similar during setup. FIX",
"initial_wealth_income_ratio_probs": [0.33333, 0.33333, 0.33334],
"NEW_initial_wealth_income_ratio_variance": "VarInitialLogInc; setup_params.m; .3329  (NONE); FIX",

"quantile_to_match": 0.5 ,
"quantile_to_math_comment":"[median] (NONE in python -- see where this used in Matlab, implement same estimator in Python, as quickly as possible.)",

"cohort_age_groups":{"1" : [ 26,27,28,29,30 ],
                     "2" : [ 31,32,33,34,35 ],
                     "3" : [ 36,37,38,39,40 ],
                     "4" : [ 41,42,43,44,45 ],
                     "5" : [ 46,47,48,49,50 ],
                     "6" : [ 51,52,53,54,55 ],
                     "7" : [ 56,57,58,59,60 ]},

"cohort_age_groups_comment": "Note that the above is not used in the MATLAB code. We likely want to *perhaps* add an explicit usage there, to ensure that we get the correct values matching in the SCF code.",

"psi_sigma": [0.27386127875258303721,
0.26950246556825491195,
0.26507198625040867546,
0.26056618514708551615,
0.25598108482751941173,
0.25131234497501730996,
0.24655521427098336940,
0.24170447375168491178,
0.23675436971457858304,
0.23169853371636989214,
0.22652988649112992814,
0.22124052165246002599,
0.21582156372434393998,
0.21026299321513874929,
0.20455342887167132782,
0.19867985355975656403,
0.19262726483521158682,
0.18637822325921868383,
0.17991225931723381359,
0.17320508075688773042,
0.18027756377319947845,
0.18708286933869705537,
0.19364916731037085107,
0.20000000000000001110,
0.20615528128088300708,
0.21213203435596425517,
0.21794494717703366549,
0.22360679774997896385,
0.22912878474779199700,
0.23452078799117148655,
0.23979157616563595568,
0.24494897427831779924,
0.25000000000000000000,
0.25495097567963925789,
0.25980762113533162339,
0.26457513110645908272,
0.26925824035672524248,
0.27386127875258303721,
0.27838821814150110923,
0.28284271247461900689,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002],
"xi_sigma":  [0.37416573867739416626,
0.37037749280900855720,
0.36655009802068577729,
0.36268231489619334740,
0.35877283720754099550,
0.35482028676139121259,
0.35082320772281166965,
0.34678006035008740460,
0.34268921406413921371,
0.33854893976408290124,
0.33435740128621616041,
0.33011264588676242360,
0.32581259360842113049,
0.32145502536643183467,
0.31703756956048684268,
0.31255768698323149746,
0.30801265375272307567,
0.30339954194309864954,
0.29871519752227077005,
0.29395621512438957490,
0.28911890908369103359,
0.28419928002940259004,
0.27919297618084515378,
0.27409524827731895913,
0.26890089681459289350,
0.26360420991930211265,
0.25819888974716115326,
0.25267796470241299378,
0.24703368398993899580,
0.24125738994925774450,
0.23533936216582085343,
0.22926862533740322014,
0.22303271003059113586,
0.21661735138967266878,
0.21000610491736687591,
0.20317984959648752175,
0.19611613513818404453,
0.18878830906871760242,
0.18116432546313532281,
0.17320508075688773042,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002,
0.00100000000000000002],

"Gamma_vector":  [1.0,   1.0,   1.0,   1.0,   1.0,
1.0,   1.0,   1.0,   1.0,   1.0,
1.0,   1.0,   1.0,   1.0,   1.0,
1.0,   1.0,   1.0,   1.0,   1.0,
1.0,   1.0,   1.0,   1.0,   0.7,
1.01,  1.01,  1.01,  1.01,  1.01,
1.01,  1.01,  1.01,  1.01,  1.01,
1.01,  1.01,  1.01,  1.01,  1.01,
1.025, 1.025, 1.025, 1.025, 1.025,
1.025, 1.025, 1.025, 1.025, 1.025,
1.025, 1.025, 1.025, 1.025, 1.025,
1.025, 1.025, 1.025, 1.025, 1.025,
1.025, 1.025, 1.025, 1.025, 1.025],

"Gamma_vector_comment": "The Gamma vector *must* contain a value for the final T period, even if it is NA or None. Still true?",

"timevary_discount_factors":   [0.9902111,0.9902111,0.9902111,0.9902111,0.9902111,
0.9902111,0.9902111,0.9902111,0.9902111,0.9902111,
0.9902111,0.9902111,0.9902111,0.9902111,0.9902111,
0.9902111,0.9902111,0.9902111,0.9902111,0.9902111,
0.9902111,0.9902111,0.9902111,0.9902111,0.9902111,
0.8287214,0.981697,0.9803439,0.9791338,0.9780698,
0.9771553,0.9763936,0.9757881,0.9753422,0.9750595,
0.9749437,0.9749984,0.9752274,0.9756346,0.9762239,
0.9769995,0.9779656,0.9791264,0.9804866,0.9820506,
0.9838233,0.9858095,0.9880143,0.9904431,0.9931012,
0.9959943,0.9991282,1.002509,1.006143,1.010037,
1.014198,1.018632,1.023348,1.028352,1.033653,
1.039259,1.045179,1.051422,1.057997,1.064914],

"survival_probs": [0.63096,0.63096,0.63096,0.63096,0.63096,
 0.93722,0.93722,0.93722,0.93722,0.93722,
 0.96208,0.96208,0.96208,0.96208,0.96208,
0.97567,0.97567,0.97567,0.97567,0.97567,
0.98439,0.98439,0.98439,0.98439,0.98439,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000,
1.000,1.000,1.000,1.000,1.000], 
"survival_probs_comment" : "We need to ensure that these survival probabilities are correct. Had to adjust them to match OpenCL output. Review creation process for survival_probs."
}
